<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEhUSERAVFRUVFRUWEBIVERcVFRUVFRUXFhUYFRYY
        HSggGBolHRcVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDRoQEBctJh8dKy0rLS0tLS0tLS0t
        LS0tLS0tLSstLS0tLS0tLS0tLS0tLS0tLS0tLS0rLS0tLS0tLS3/wAARCACOAWQDASIAAhEBAxEB/8QA
        GwABAAMBAQEBAAAAAAAAAAAAAAECAwQFBgf/xAAzEAACAQEFBgUEAwACAwAAAAAAAQIRAxIhMVEEQWFx
        kbEFE4Gh8CLB0eEyUvFyghQjYv/EABoBAQEBAQEBAQAAAAAAAAAAAAACAQMFBAb/xAAhEQEBAQEAAwAC
        AgMAAAAAAAAAARECEiExQVEDIgQy8f/aAAwDAQACEQMRAD8A/FZ5vm+5BM83zfcqekhIIAEggASCABII
        AEggASCABIIAEggASCABIIAEggASCABIBJrAkEmsQTQlE0NxOrUqIuhCL039SmV27XtUZQgo2cY3Y0k1
        WsnV/U8c8UsOBxqmhaH37mtrsk4pNxdGqxdMGtUXd69uczn0xVNPcnDT3/RZQ4ruSkvmAw1XDj1/RZQ4
        MmopU3Ga12Wyi5q9Kir9TSrRb95O3KF9+W24J0g2qO7uqtzKtUw6/gqkV+MR+dVRNzToWoSoMzG6zoQd
        FNWulQPFnk8meb5vuVLTzfN9yp8r7QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJANYkkhFgwJQRKKTUpE0O
        3weVkrRO2i5QT+uMXdbWie4x2hxcndTpuxOnj/XXPy/tmMUi0SVTR9S8Y8H1/QkLUwjpv9qY/Y6ts22c
        1GMpNqEVGCbqorOiTyxbLeH+XGadrecKq+otVa3pNqlTHa7rm7uVcK504nSTOfrlbL18+MlTTpgWUVr1
        ISLxiZjbSNk3ljyOi02SUKOUWm1WNV7mcHR1z7Hbt3iNpb3fMk5OMVGLbyisoo6STHLq9bM+OC5xJovm
        BNCaGY3UewUa/k0jAslXkhjNVWG9rkCWgMZrw55vm+5UtPN833KnxPSAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        xlNtRTUE26RVW6JbkIbNaON9KTjWlcaV0qcu5HdDbpqz8pSlccquKbpeSpeplXHM682X/Zzssn9XPzku
        7LqS09Wl7Gbk1vr2I8x6huO+18Rbs1Z3IpJt3lFXnVJUctMMjjIU+XREqfBdCr1b9ROZPjSEalnLE7dh
        26MLOcZWUJOaSjJp1jR1bjj6epxebwXph2LySfXOW230sovT7F1HV/crZy3tL3x9zt2/b1Npxs42aupU
        hVZKjdc8aV9SpmJu7mMo2etfWiOvYNuVjOM4pO600mrydNU8O55ykuPWpZU1fT9lSp648pldu2be7Scp
        0SvNtpKixdcEsDB2jebMkuK9/wAFlF/GitTOJJkdHnNrPLs/j6kXk+Hb9F9h2SdpK5GLblgklm91CtvZ
        Ozbi19SzWn7K95qPW+P5dNtYuyUb2ckpKjTweWKyfuqnM5/4Zq01xD9jNJz+2l4gzqDNMeHPN833Kmk4
        Or5sjy2ec9VQF/LY8tgUBfy2PLYFAX8tjy2BQF/LY8tgUBfy2PLYFAX8tjy2BQF/LY8tgUBfy2PLYFAX
        8tl7Kwbe42e7jLcZJFl/h7XjPgysLOxm5V86F+iVKUlKNK/9fc8u2neUaRjGiSdK4vV13ldc+P1HPc6m
        xhl8wIbL3Xw6EqEtSFs6FlF6EvDiVvGjrlsjjZxtHSjckqSTdUo1qq1Waxf2OeUsF83kJ4e4l9kVbPwm
        T9rReoaKI0jjh0NKIsihpYoqJq9o8loSsM89PyVbpz/OhUpONL1S9cOT7/4ZIvD7dsfsVKmxapKZQlFa
        mxomWiZwVXQs5bl/pupx3bDt8rGSnZyaknVSW7kV2vapTk3J1bbbbxbrxOSJ7Hi3hSslZO/V2lnGbwyq
        2qZ45Fy2xx6nHPc37Xm3ly5fsmL0a5PAtGw+V/R6fiPgzsYWc24vzY3opVwVWsa8hJbNOu+ZZP28y5pX
        o37pAl3uBJOtf//Z
</value>
  </data>
</root>